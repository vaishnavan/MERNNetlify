{"version":3,"sources":["component/MovieDisplay.js","component/MovieForm.js","App.js","reportWebVitals.js","index.js"],"names":["MovieDisplay","props","state","movieArr","Axios","get","then","res","setState","data","this","map","movieName","_id","Component","MovieForm","handleChange","e","target","name","value","handleSubmit","preventDefault","movieData","movieUrl","language","post","console","log","type","onChange","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAuCeA,E,kDAnCb,WAAaC,GAAQ,IAAD,8BAClB,cAAMA,IAEDC,MAAQ,CACXC,SAAU,IAJM,E,qDAQpB,WAAoB,IAAD,OACfC,IAAMC,IAAI,gDACTC,MAAK,SAACC,GACH,EAAKC,SAAS,CACVL,SAASI,EAAIE,Y,oBAMzB,WACC,IACUN,EAAYO,KAAKR,MAAjBC,SACT,OAAO,8BAEFA,EAASQ,KAAI,SAACF,GACX,OACI,8BACI,6BAAKA,EAAKG,aADJH,EAAKI,c,GA1BJC,a,QC8CZC,E,kDA7Cb,WAAad,GAAQ,IAAD,8BAClB,cAAMA,IASRe,aAAe,SAACC,GAAO,IAAD,EACCA,EAAEC,OAAhBC,EADa,EACbA,KAAKC,EADQ,EACRA,MAEZ,EAAKZ,SAAL,eACKW,EAAMC,KAdO,EAkBpBC,aAAe,SAACJ,GACZA,EAAEK,iBACF,IAAMC,EAAY,CACdX,UAAU,EAAKV,MAAMU,UACrBY,SAAS,EAAKtB,MAAMsB,SACpBC,SAAS,EAAKvB,MAAMuB,UAExBrB,IAAMsB,KAAK,uCAAwCH,GAClDjB,MAAK,SAACC,GACHoB,QAAQC,IAAIrB,OAxBlB,EAAKL,MAAQ,CACTU,UAAU,GACVY,SAAS,GACTC,SAAS,IANK,E,0CA+BpB,WACE,OACE,8BACE,iCACE,uBAAOI,KAAK,OAAOV,KAAK,YAAYW,SAAUpB,KAAKM,eACnD,uBAAOa,KAAK,OAAOV,KAAK,WAAWW,SAAUpB,KAAKM,eAClD,uBAAOa,KAAK,OAAOV,KAAK,WAAWW,SAAUpB,KAAKM,eAClD,wBAAQe,QAASrB,KAAKW,aAAtB,gC,GAvCcP,aCaTkB,E,4JAVb,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,W,GALUlB,aCOHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.64633dcb.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Axios from 'axios';\r\n\r\nclass MovieDisplay extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      movieArr: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n      Axios.get(\"https://mernbuildmine.herokuapp.com/allmovie\")\r\n      .then((res)=>{\r\n          this.setState({\r\n              movieArr:res.data,\r\n          });\r\n      })\r\n  }\r\n\r\n\r\n  render () \r\n  {\r\n      const {movieArr} = this.state;\r\n    return <div>\r\n\r\n        {movieArr.map((data)=> {\r\n            return(\r\n                <div key={data._id}>\r\n                    <h1>{data.movieName}</h1>\r\n                </div>\r\n            )\r\n        })}\r\n\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default MovieDisplay\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios';\r\n\r\nclass MovieForm extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n        movieName:'',\r\n        movieUrl:'',\r\n        language:'',\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const {name,value} = e.target;\r\n\r\n    this.setState({\r\n        [name]:value,\r\n    });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      const movieData = {\r\n          movieName:this.state.movieName,\r\n          movieUrl:this.state.movieUrl,\r\n          language:this.state.language,\r\n      }\r\n      Axios.post('https://mernbuildmine.herokuapp.com/', movieData)\r\n      .then((res)=>{\r\n          console.log(res);\r\n      })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <form>\r\n          <input type='text' name='movieName' onChange={this.handleChange} />\r\n          <input type='text' name='movieUrl' onChange={this.handleChange} />\r\n          <input type='text' name='language' onChange={this.handleChange} />\r\n          <button onClick={this.handleSubmit}>Add movie</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MovieForm\r\n","import React, { Component } from 'react';\nimport MovieDisplay from './component/MovieDisplay';\nimport MovieForm from './component/MovieForm';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <MovieForm />\n        <MovieDisplay />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root') \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}